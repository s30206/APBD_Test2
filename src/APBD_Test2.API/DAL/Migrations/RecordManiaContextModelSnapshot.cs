// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1;

#nullable disable

namespace WebApplication1.DAL.Migrations
{
    [DbContext(typeof(RecordManiaContext))]
    partial class RecordManiaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("Language_pk");

                    b.ToTable("Language", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExecutionTime")
                        .HasColumnType("bigint");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("Language_Id");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("Student_Id");

                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("Task_Id");

                    b.HasKey("Id")
                        .HasName("Record_pk");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TaskId");

                    b.ToTable("Record", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("Student_pk");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descrition")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("Task_pk");

                    b.ToTable("Task", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Record", b =>
                {
                    b.HasOne("WebApplication1.Language", "Language")
                        .WithMany("Records")
                        .HasForeignKey("LanguageId")
                        .IsRequired()
                        .HasConstraintName("Copy_of_Table_1_Language");

                    b.HasOne("WebApplication1.Student", "Student")
                        .WithMany("Records")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("Copy_of_Table_1_Student");

                    b.HasOne("WebApplication1.Task", "Task")
                        .WithMany("Records")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("Copy_of_Table_1_Task");

                    b.Navigation("Language");

                    b.Navigation("Student");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("WebApplication1.Language", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("WebApplication1.Student", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("WebApplication1.Task", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
